#!/bin/bash

# Terminate script on first error
set -e

echo "ParaViewConnect installer"

# Check command line arguments
if [ "$#" -ne 1 ]; then
    echo "Supply full path for paraview executables"
    exit
fi

echo "Using ParaView from: $1"

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd $DIR

pushd ..

echo "Checking for pvpython"
PVPYTHON=`type -p $1 || true`
if [ ! -f $PVPYTHON ]; then
    echo "ERROR: pvpython not found"
    exit
fi

echo "Checking for virtualenv"
#wget https://pypi.python.org/packages/d4/0c/9840c08189e030873387a73b90ada981885010dd9aea134d6de30cd24cb8/virtualenv-15.1.0.tar.gz#md5=44e19f4134906fe2d75124427dc9b716
#curl -O https://pypi.python.org/packages/d4/0c/9840c08189e030873387a73b90ada981885010dd9aea134d6de30cd24cb8/virtualenv-15.1.0.tar.gz
#curl -O https://files.pythonhosted.org/packages/d2/58/6afb5bd05c610e378eb8f1188896fd0a19dfe99d84613cdb60f2ca5cf0ef/virtualenv-20.0.25.tar.gz
#tar xvf virtualenv-20.0.25.tar.gz
#VIRTUAL_ENV=`type -p virtualenv || true`
#if [ ! -f $VIRTUAL_ENV ]; then
#	echo "ERROR: virtualenv not found"
#	exit
#fi

if [ -d "pvconnect-py27" ]; then
	\rm -r pvconnect-py27
fi

echo "Creating virtual environment"
python3 -m venv pvconnect-py27

echo "Activating virtual environment"
source pvconnect-py27/bin/activate

echo "Installing yolk"
pip install yolk

echo "Installing requirements"
pip install -r requirements.txt 

yolk -l

deactivate

# Save location of original pvpython
echo "$1" > pvconnect-py27/bin/pvpython-location.txt

popd

